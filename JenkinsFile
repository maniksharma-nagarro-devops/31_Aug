pipeline {
    agent any
    
    
    stages {
	   
        stage("Code Build Using Maven"){
            steps{
            		withMaven(maven:'maven2'){
			sh 'mvn -f pom.xml install'
		}
            }
        }



	stage('Deploy to artifactory'){
		   steps{
		        rtUpload(
		            serverId: "artifactory-server",
		            spec: '''{
		                    "files":[
		                    {
		                        "pattern":"*.war",
		                        "target":"assignment"
		                     }
		                             ]
		            }'''
		        )
		   }
		}





        stage('Creating Docker Images') {
            steps{
                sh 'docker build -t manik_images_prod:latest .'
            }
        }

 
	stage('Check and Delete Existing Container'){
	    steps{
			sh "chmod +x -R ${env.WORKSPACE}"
			sh "./container_check.sh"
			}
		}


	stage('Run docker image'){
	    steps{
			sh 'docker run --name prod -d -p 9090:8080 manik_images_prod:latest'
			}
		}
    }
   post{
        always{
            mail to: "manik.sharma@nagarro.com",
            subject: "Test Email",
            body: "Test"
        }
    }
}
